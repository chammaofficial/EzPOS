<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v22.1" name="DevExpress.Data.v22.1, Version=22.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="barBtnBranches.ImageOptions.SvgImage" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v22.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIyLjEsIFZlcnNpb249MjIuMS4z
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAAoFAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgeD0iMHB4IiB5PSIwcHgi
        IHZpZXdCb3g9IjAgMCAzMiAzMiIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv
        MjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWw6c3Bh
        Y2U9InByZXNlcnZlIiBpZD0iTGF5ZXJfMSIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAg
        MzIgMzIiPg0KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLkJsdWV7ZmlsbDojMTE3N0Q3O30KCS5Z
        ZWxsb3d7ZmlsbDojRkZCMTE1O30KCS5SZWR7ZmlsbDojRDExQzFDO30KCS5HcmVlbntmaWxsOiMwMzlD
        MjM7fQoJLkJsYWNre2ZpbGw6IzcyNzI3Mjt9CgkuV2hpdGV7ZmlsbDojRkZGRkZGO30KCS5zdDB7b3Bh
        Y2l0eTowLjU7fQoJLnN0MXtvcGFjaXR5OjAuNzU7fQoJLnN0MntkaXNwbGF5Om5vbmU7fQoJLnN0M3tk
        aXNwbGF5OmlubGluZTtmaWxsOiNGRkIxMTU7fQoJLnN0NHtkaXNwbGF5OmlubGluZTt9Cgkuc3Q1e2Rp
        c3BsYXk6aW5saW5lO29wYWNpdHk6MC43NTt9Cgkuc3Q2e2Rpc3BsYXk6aW5saW5lO29wYWNpdHk6MC41
        O30KCS5zdDd7ZGlzcGxheTppbmxpbmU7ZmlsbDojMDM5QzIzO30KCS5zdDh7ZGlzcGxheTppbmxpbmU7
        ZmlsbDojRDExQzFDO30KCS5zdDl7ZGlzcGxheTppbmxpbmU7ZmlsbDojMTE3N0Q3O30KCS5zdDEwe2Rp
        c3BsYXk6aW5saW5lO2ZpbGw6I0ZGRkZGRjt9Cjwvc3R5bGU+DQogIDxnIGlkPSJDYXRlZ29yeSI+DQog
        ICAgPHBhdGggZD0iTTE5LDEyaC04Yy0wLjYsMC0xLTAuNC0xLTFWNWMwLTAuNiwwLjQtMSwxLTFoOGMw
        LjUsMCwxLDAuNCwxLDF2NkMyMCwxMS42LDE5LjUsMTIsMTksMTJ6IiBjbGFzcz0iQmx1ZSIgLz4NCiAg
        ICA8cGF0aCBkPSJNMTEsMjZIM2MtMC41LDAtMS0wLjUtMS0xdi02YzAtMC41LDAuNS0xLDEtMWg4YzAu
        NiwwLDEsMC41LDEsMXY2QzEyLDI1LjUsMTEuNiwyNiwxMSwyNnoiIGNsYXNzPSJCbHVlIiAvPg0KICAg
        IDxwYXRoIGQ9Ik0yNywyNmgtOGMtMC41LDAtMS0wLjUtMS0xdi02YzAtMC41LDAuNS0xLDEtMWg4YzAu
        NSwwLDEsMC41LDEsMXY2QzI4LDI1LjUsMjcuNSwyNiwyNywyNnoiIGNsYXNzPSJCbHVlIiAvPg0KICAg
        IDxnIGNsYXNzPSJzdDEiPg0KICAgICAgPHBhdGggZD0iTTE2LDE0di0yaC0ydjJIN2MtMC42LDAtMSww
        LjQtMSwxdjNoMnYtMmgxNHYyaDJ2LTNjMC0wLjYtMC40LTEtMS0xSDE2eiIgY2xhc3M9IkJsYWNrIiAv
        Pg0KICAgIDwvZz4NCiAgPC9nPg0KPC9zdmc+Cw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="barBtnUnits.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAATdEVYdFRpdGxlAEdhdWdlO0xpbmVhcjvcm2PxAAAB2UlEQVQ4T6WSTU8TYRSFX5DgB6C/w8SE
        BSSSGBcmbNiwYmVUwHQF/WIUoZ1CKU5oJUECKGzYEAKltIqQGr4p/Ae+00F/gBZKC3Zgcbj3LQbSzMLK
        TZ6cN3fOOXlnMgLAjTBd5oPpMh94CojCHG6ZUJQD7wqE/3MsFhhZR2A4Bjqj59MaeoZWoTGDK9AGltE9
        sARfP/FxAV19C/ASnt7ouizyU+B/Rv0Q5fsXC21wWS4C8z+hRX/AN6uj42scrvA+3oX2oEzu4DRzjoO3
        FujKa+jOBqT/nMPln+OCO6K7f1EWaN85fIDOmTjckX20hXZl2DG+jfQpFSiNFK5H3P4SqZMztL6f4YK7
        wts3Lwt8c7oMq5fhNxR2jm/BNraJYwroDgrbXiFufYGj9BkU3xcuuCfU3qgsYBOTpIfJE0PCxr8cpkhT
        BmkWZ2eYC0oEvwvPk2oLGQ1UPWuQxsqnz3F4bKD8cR1pBo8qapFIZvCwvAa/kwbsaogLSkWr9k0WJMic
        IKNUMrIpq1l+MUdXWF3BbIFDDa4pXRG0eCNwesN0tWk4OghPCHbPFGwq4Z6C1R1EM4WaXJNoap+ApWV0
        Q35EmttEiWy7ouwa93N4cKkcLjT9v/PBdPnvQFwAQ3KdggY4f+0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="barBtnUnits.ImageOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAATdEVYdFRpdGxlAEdhdWdlO0xpbmVhcjvcm2PxAAAEP0lEQVRYR8WW+1NUZRjHT2MXy272T3T1
        hoqi49htphqn21TmLfKCwLIsJAK7sMByWdCWBVayGGDEMSMQFTFvKViCVD8WjZXtLrUo/VAIy7Vl9Ydv
        z/O+55yV5jTRL6cz85nn2e979v1+z8N7AAXA/4qhaCaGopkYimZiKJqJoWgmhqKZ8DWHuFPlrv/I3bPk
        nr/BGn//DsV3oPdS7cFvsM+Ipq/ha/pKUMMckPiIKqJa1F5JYy+8gh7qe+BtYC6jkmplPSFqNzwqFfu7
        ekSIqsZumoT5154Pu3j+cxVvwyUhjE/dFExM3cL4pOzHuderqmtrk/LzmKpx/SdGmQnqCa5Tf95C+Qed
        HOBexVv/pR7AfSaEstO/ooQoPvkLik70o6A9iPxjATiOBpDb6kd2y1VkNf+EzMM/Iv3QD0g7eAWpTd+T
        URT9u7YjmLmN2Eq8i6AtEQHbFgTSNyNglYxORDFJAdy1FzjAfYqnTg1AKd1k7PviN2IQVV3X4e28Ds/5
        Aew5N4DysxTuFIXjYB1BONVg9jY/khv6xJOx8bXCDMKGAadVkp+GUJ4FIYcF/tSNCI9HxZTLfOc5wDzl
        /Y8uigA8nhIyqLk4iOquQdX8mm5eypMhc1dHvzDPU81zjvyMpPrvEKYnC2Ykkqk0D7FxvjQOOVIRsqdQ
        gA0YGYuKH2dJzecyAB8GvsIigDQopNE7jwfl2MlEG/t7NHYbjd0qxn4FyY192FHfh21134on41H7acz+
        NMKySRj6LUQK8zau7lyPYbpPBKg+xwHuVyr2d8oA4zfFU/BGMUijOnI79ASyn5a9hro+PMY6QevDpEu4
        j8EBXFVnOcADirtWBpixuV41E1l5s5iubaiZaEYxwxujalV7jTEKUOQVAR5U3PsuiAD8xdXPJ6mGUSQ8
        u1U1ncaKp99RN41i+ZpNciP6HLdqvai8tnjlG7rBguWv6qZPxq3T9ccWvYgb4WnxWhZWnpEBSuk0xgLs
        kDfTlzmAMKXPK9ZuoSrDLFuzUd8wLuEtvV8U/zqGqDILlr0iNO6fWLKOagRD4YgIMMQB6Edd4BEBHlL4
        NPLFpque264nX/lMotiA+/i1m3Wjpas3SCPaaEnCm7InFsa/JjQ2emrpy2o/jccXv4Q/qDKPLnyBakQE
        cHpOc4CHFRedRhGAUwoTTis30jbREcZ8X0RspD0Z99JE1W/rZ6yNRPA7VT7szr0iwHzF5ZUBtF+XnE5W
        fivUN0Noskpi+gzogMo1dd3wzZLk7z0lJ5BV3Nptr/gMjvIO5BI5ZSeQXdou2F3SjqyS48gqPoZdrqPI
        dLUhs6gNGQVHBDZnK9LzWwTWvBZYHM1Is3+KVHszLLmfICXnsCA5+2PBzt3MISQRida6yxRgHkF/EPg0
        cpp/Z/4seGQW8H1sPsfwvxQzMRTNxFA0E0PRTAxFMzEUzcRQNBND0Tyg/AXM5qmgunpOIAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <metadata name="TimerDateTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>159, 17</value>
  </metadata>
  <metadata name="documentManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>319, 17</value>
  </metadata>
</root>