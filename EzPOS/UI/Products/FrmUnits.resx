<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupControl1.CaptionImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="FrmUnits.IconOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAcdEVYdFRpdGxlAFJ1bGVySG9yaXpvbnRhbDtSdWxlcjtryOA2AAAFr0lEQVRYR+2WaUxUVxiG
        p7Z2cwUBRWNNt6RVq1VbtYpo2jQ2dQOBYREUFyragAVBZLFuaKVq1WqwrqUgFhDZBwaGfYBhYFBAUBCp
        qaldrMoyM3eZucPb716w6Y9JapoG/3iTJ3dycjPP+33nnHuuDMATxergYGJ1cDCxOjiYWB0cTKwODiZW
        BwcT8XrmCSJdzxLPDTD0P/L8Y/LCAOJv0TdEdiveuez2yYXojF+IWyec0XF8AeGEjmPz0X50Ptq+mYe2
        w/Nw/eBctB6cg5a4Obh2YDaa989G07730Rj7Hq7umYWG3cTOmdB9OQP1MTOgjZ4ObdR0aLZPgybiHVRv
        m4rqsClQb52CypDJKAt+u5wCDJXdjneG0H1zgHYIXUR3G92vQ3jQ0s/9ZqKRaID5ng7CPS2E3zUw/1ZF
        qGH+tRzCL6UQ7hZBuFMAyx0FhJ9zIdzOgPBTOiydqbDcTICl+QgsjV/DpIuFcu04cQG8KOs84SRJ+c4s
        8B0ZRDqRCq49hbgIri0R3I0EcNfPg2s9De7ad+Cb48E1HSeOgLtyGFyD+KcHwOv2wlS/C+a6HTDXRsOs
        iYC5OgTmktUQCtxgUbrDUugBLscFSn8pwEuyjm8/oCpbwd1MI+GPYNsvkDCJZN+DbT0LruU0WBKyjceJ
        YyQkacMhcCTk6mPBafeAq90FXhNNbIepJhzmKpKqg8Cr1sBMYnP+yv4ABR5SADbbBQVrHMQAw2Q3j8yF
        8OdVsCRlWxPAtpwl4SmwTSfBSNKjYKlKtj4ObN1XYLR7wWp3gdPEgNVEgauKBF8VDl4dCr4yGKbyTeAL
        fcDnuoDPc4GJ5BaSC2L1Sjn6iuRSgHw/KcBwWdvh2TD9UUvSM2AGpMyVo2B0h8DUHwBTt1+SMprdYGp2
        gKmKAlsVAVa9FUxlCLiKYPBlm8Gp/MEVyMHlrQCvGJArXCkAVZ7f33oLyftUnmBzXKHwtRcDjJDdODgL
        prvlYBpISq011sXBqN0HY+1eGDU7YSSpUR0JY+U2YiuMFVvAlgeDKQ4AU+AHNs8dbK4r8UjsCp6q5kks
        tl+qPF9svRwWkosBOHo+b5UUYKTsRtxMmv9U6CsjoC8Pg74shO6hyNk8HvqSzTCoNsGg3ACDwheGXDn0
        lN6QtZxYhtTVduConRxJRR6JTVQxT2Kh0BMJbiOp9Z5UPckJiAHo2VwfOzHAKFnL/ndhrI7Bg6T5eJjo
        hIfJC4iFyA50hKF4HXpSP0Zv2mL0pn8CfcYS6DOXwpi5Aky2K1L8xtAqDwWncOsX0yLjaRrMJBQKvSTO
        rxyJPt12knuT3At9xV60C1Yipz/AaNm12GkwqCPw4IKTVHVX8iJ0XVyEzI2OMJYEoOfSYlxe7wD95aXQ
        U9Vpa+zBUBfYHDckr7KFqTaMpB5I8rKBiYQmpTd+8BgFoWgV4YNzrmKASPSV+ODM8uHSXQyc4z1GDGAj
        a9ozFXp1OB4mLUC22HbVWnSnfISMz8bBWBpIlS9B+joHMDT3Bmq31PbqMJp7OZJ9KIA2gtrtg0T5aNr/
        UTAV+SGBqhbqY2BW+eGcC0l10ST2w+llw4AG2jkKd2R7SgFsZVd3TkZ38RbcT3RGFrW9R+lP3fgQGQFj
        0avaiK6UT5G21h6G0iD0XF4utd1YEYreTHdc8LalHREOQ46nVLW4Owy53jhPVXM1kWAU3jhLVXM1tGsU
        Xji15GXpPcEpPJAtt+3vgCbqrVJd1Juoj3wDpV9Mgnbb69CEv4aioImoDnkVVVsmQRk4HhVBr6Di84nI
        2zAOZYETULJxArL8HaAKcETRekdk+NrR63UsvWDG4hIFU9A+V/g6IEVuQwvOnlpuh4tuo6TKRVLcbMoo
        wAiC3kbiYhDbIZONeQzsHgP7f0H8H1Eunop/H8fWjtn/i38eySLimOgdQlj9UBgsnn4TPg3wNMCTDgDZ
        X9BY2bCF9pd7AAAAAElFTkSuQmCC
</value>
  </data>
</root>